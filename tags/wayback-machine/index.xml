<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wayback-Machine on Granular Material</title><link>https://dallascard.github.io/granular-material/tags/wayback-machine/</link><description>Recent content in Wayback-Machine on Granular Material</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 31 Mar 2024 20:08:01 -0400</lastBuildDate><atom:link href="https://dallascard.github.io/granular-material/tags/wayback-machine/index.xml" rel="self" type="application/rss+xml"/><item><title>Financing Common Crawl</title><link>https://dallascard.github.io/granular-material/post/financing-common-crawl/</link><pubDate>Sun, 31 Mar 2024 20:08:01 -0400</pubDate><guid>https://dallascard.github.io/granular-material/post/financing-common-crawl/</guid><description>Mozilla recently published an excellent new report out about Common Crawl, the non-profit whose web crawls have played an important role in the development of numerous large language models (LLMs). Written by Stefan Baack and Mozilla Insights, the report is based on both public documents and new interviews with Common Crawl&amp;rsquo;s current director and crawl engineer, and goes into some detail about the history of the organization, and how its data is being used.</description></item><item><title>Stability and Change</title><link>https://dallascard.github.io/granular-material/post/stability/</link><pubDate>Sat, 12 Mar 2022 17:40:34 -0500</pubDate><guid>https://dallascard.github.io/granular-material/post/stability/</guid><description>One of the biggest frustrations with software is that things are constantly changing. From operating systems to apps to web interfaces, things rarely remain the same for very long, especially for users of Windows or MacOS.
There are many reasons for this of course. For decades, hardware has continued to improve at a steady rate, and so software is constantly being rewritten to take advantage of the latest capabilities. Moreover, the incredibly sloppy standard for software quality and reliability (compared to traditional engineering disciplines) means that even the most professional software is shipped with massive numbers of bugs and vulnerabilities, which constantly need to be patched.</description></item></channel></rss>